FROM node:20-bookworm AS base

RUN corepack enable && corepack prepare pnpm@latest --activate

# ---------

FROM base AS deps

WORKDIR /app

COPY package.json pnpm-lock.yaml ./ 

RUN pnpm install --frozen-lockfile

# ---------

FROM base AS systemdeps

WORKDIR /app

RUN apt-get update && apt-get install -y \
  curl \
  git \
  build-essential \
  ca-certificates \
  openssl \
  libdbus-1-3 \
  && update-ca-certificates \
  && rm -rf /var/lib/apt/lists/*

# ---------

FROM systemdeps AS rust

WORKDIR /app

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

RUN rustup target add wasm32-unknown-unknown

RUN curl -L https://github.com/stellar/stellar-cli/releases/download/v23.1.3/stellar-cli-23.1.3-x86_64-unknown-linux-gnu.tar.gz \
  | tar -xz -C /usr/local/bin/ --strip-components=0

# ---------

FROM base AS builder

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY package.json pnpm-lock.yaml ./
COPY tsconfig.json tsconfig.build.json ./
COPY *.ts ./

RUN pnpm run build

# ---------

FROM rust AS runner

WORKDIR /app

COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json ./

RUN mkdir -p /workspace
WORKDIR /workspace

ENV NODE_ENV=production
ENV PATH="/root/.cargo/bin:/usr/local/bin:${PATH}"
ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
ENV SSL_CERT_DIR=/etc/ssl/certs

ENTRYPOINT ["node", "/app/dist/generate-sdk.js"]

CMD ["--help"]